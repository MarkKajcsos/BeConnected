name: Feature Preview Deploy

on:
  pull_request:
    types:
      - labeled

jobs:
  deploy:
  
    if: contains(github.event.label.name, 'deploy')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run build
        run: pnpm run build

      - name: Deploy preview environment
        run: pnpm run deploy:preview
        env:

          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          UPLOAD_EXPIRES: ${{ secrets.UPLOAD_EXPIRES }}
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_REPO: ${{ github.repository }}
    
      - name: Create Slack channel
        run: aws lambda invoke --function-name create-slack-preview-channel --payload '::escapeProperty::${{'{"prNumber": "${{ github.event.pull_request.number }}"}'}}' response.json

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Slack channel
        run: aws lambda invoke --function-name delete-slack-preview-channel --payload '::escapeProperty::${{'{"prNumber": "${{ github.event.pull_request.number }}"}'}}' response.json
